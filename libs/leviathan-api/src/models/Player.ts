/* tslint:disable */
/* eslint-disable */
/**
 * leviathan
 * lolprodle API server
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Player
 */
export interface Player {
    /**
     * 
     * @type {string}
     * @memberof Player
     */
    country: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Player
     */
    favChamps: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Player
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Player
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Player
     */
    role: string;
    /**
     * 
     * @type {string}
     * @memberof Player
     */
    team: string;
}

/**
 * Check if a given object implements the Player interface.
 */
export function instanceOfPlayer(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "country" in value;
    isInstance = isInstance && "favChamps" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "role" in value;
    isInstance = isInstance && "team" in value;

    return isInstance;
}

export function PlayerFromJSON(json: any): Player {
    return PlayerFromJSONTyped(json, false);
}

export function PlayerFromJSONTyped(json: any, ignoreDiscriminator: boolean): Player {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'country': json['country'],
        'favChamps': json['fav_champs'],
        'id': json['id'],
        'name': json['name'],
        'role': json['role'],
        'team': json['team'],
    };
}

export function PlayerToJSON(value?: Player | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'country': value.country,
        'fav_champs': value.favChamps,
        'id': value.id,
        'name': value.name,
        'role': value.role,
        'team': value.team,
    };
}

